<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imec.central.components.admin.mapper.RoleMapper">
	<!-- 自定义数据容器返回的bean -->
	<resultMap type="com.imec.central.components.admin.pojo.Role"
		id="roleList">
		<result property="id" />
		<result property="name" />
		<result property="remark" />
		<result property="indexUrl" />
		<result property="indexRemark" />
	</resultMap>
	<select id="selectEntity" parameterType="string" resultMap="roleList">
		select id,name,remark,indexRemark,indexUrl from t_role
	</select>
	<select id="selectSingleEntity" parameterType="string" resultMap="roleList">
		select id,name,remark,indexRemark,indexUrl from t_role
		WHERE id = #{id}
	</select>
	<resultMap type="com.imec.central.components.admin.pojo.Privilege"
		id="privilegeList">
		<result property="id" />
		<result property="name" />
		<result property="url" />
		<result property="systemName" />
		<result property="detail" />
	</resultMap>
	<!-- 查询所有权限信息 -->
	<select id="queryPrivilegeList" resultMap="privilegeList">
		select
		id,name,url,detail,systemName from t_privilege
	</select>
	<!-- 增加角色 -->
	<insert id="addEntity" parameterType="com.imec.central.components.admin.pojo.Role">
		INSERT INTO
		t_role(name,remark,indexUrl,indexRemark)
		VALUES(#{name},#{remark},#{indexUrl},#{indexRemark})
	</insert>
	<!-- 获取新增角色的编号 -->
	<select id="getMaxRoleId" resultType="int">
		SELECT MAX(id) from t_role
	</select>
	<insert id="insertPrivilegeRole" parameterType="map">
		INSERT into
		t_role_privilege(privilege_id,role_id)
		values(#{privilege_id},#{role_id})
	</insert>

	<!-- 以下是删除角色的全部操作 -->
	<!-- 删除根据id中间t_role_privilege表 -->
	<delete id="deletePrivilegeRole" parameterType="int">
		DELETE from
		t_role_privilege WHERE role_id=#{role_id}
	</delete>
	<!-- 根据id,删除用户表t_account中拥有该角色的用户 -->
	<delete id="deleteAccountByRoleId" parameterType="int">
		DELETE from
		t_account WHERE id in(SELECT account_id from t_account_role
		where
		role_id =#{role_id})
	</delete>
	<!-- 删除t_account_role中间表中的对应记录 -->
	<delete id="deleteAccountRoleByRoleId" parameterType="int">
		DELETE from
		t_account_role WHERE role_id=#{role_id}
	</delete>
	<!--最后删除t_role表的对应记录 -->
	<delete id="deleteRoleById" parameterType="int">
		DELETE from t_role
		WHERE id=#{id}
	</delete>
	<!-- 根据角色编号，查询是否有用户拥有该角色，如果有的话，则不进行删除操作 -->
	<select id="hasAccount" parameterType="int" resultType="int">
		SELECT
		COUNT(0)
		from t_account_role where role_id=#{role_id}
	</select>
	<!-- 根据角色编号，查询对应的权限 -->
	<select id="queryPrivilegeByRoleId" parameterType="int" resultType="map">
		SELECT privilege_id as pid from t_role_privilege WHERE role_id=#{role_id}
	</select>
	
	<select id="loadRolesByUser" parameterType="int" resultMap="roleList">
		SELECT r.id,r.name,r.remark,r.indexUrl,r.indexRemark
		FROM t_role r
		INNER JOIN t_account_role ar
		ON r.id = ar.role_id
		WHERE ar.account_id = #{accountId}
	</select>
	
	<update id="updateRole" parameterType="com.imec.central.components.admin.pojo.Role">
		UPDATE t_role SET name=#{name},remark=#{remark},indexUrl=#{indexUrl},indexRemark=#{indexRemark} WHERE id=#{id}
	</update>
</mapper>